NUMERIC INPUT CHWP_DOWN_A, CHWP_STATUS_A, PUMPS_REQ, PUMP_A
NUMERIC INPUT CHWP_MASTER_SPEED_CMD, PUMPS_RUNNING, PUMPS_AVAIL
NUMERIC OUTPUT CHWP_SPEED_CMD_A, CHWP_SS_A
NUMERIC PUBLIC CHWP_FAILED_A
Datetime OUTPUT CHWP_LASTSTART_A, CHWP_LASTSTOP_A
NUMERIC TIMER
Function SECTIMER

IF (CHWP_STATUS_A = On)  THEN GOTO PUMP_ON ELSE GOTO PUMP_OFF

PUMP_OFF:

  IF (PUMP_A <= PUMPS_REQ) & (PUMP_A > 0) & (CHWP_DOWN_A = Off)  THEN
    CHWP_LASTSTART_A = Date
    CHWP_SPEED_CMD_A = 35
    GOTO PUMP_START
  EndIF
  CHWP_SS_A = Off
  CHWP_SPEED_CMD_A = 0

PUMP_START:
  IF ((PUMP_A > PUMPS_REQ) ! (PUMP_A = 0) ! (CHWP_DOWN_A = On)) & (PUMPS_RUNNING > PUMPS_REQ)  THEN GOTO RAMP_DOWN
  IF (TS >= 5) & (CHWP_STATUS_A = On)  THEN GOTO RAMP_UP
  IF (TS >= 30)  THEN
    CHWP_FAILED_A = On
    GOTO PUMP_FAILED 
  EndIF
  CHWP_SS_A = On

RAMP_UP:
  IF ((PUMP_A > PUMPS_REQ) ! (PUMP_A = 0) ! (CHWP_DOWN_A = On)) & (PUMPS_RUNNING > PUMPS_REQ)  THEN GOTO RAMP_DOWN
  IF (CHWP_SPEED_CMD_A >= (CHWP_MASTER_SPEED_CMD - 2))  THEN GOTO PUMP_ON
  CHWP_SPEED_CMD_A = minimum(CHWP_SPEED_CMD_A + 5, 100)
  GOTO RAMP_UP_WAIT

RAMP_UP_WAIT:
  IF (CHWP_STATUS_A = Off)  THEN GOTO PUMP_START
  IF (TS >= 5)  THEN GOTO RAMP_UP

PUMP_ON:
  IF ((PUMP_A > PUMPS_REQ) ! (PUMP_A = 0) ! (CHWP_DOWN_A = On)) & (PUMPS_RUNNING > PUMPS_REQ)  THEN GOTO RAMP_DOWN_WAIT
  IF SECTIMER(CHWP_STATUS_A = Off, 10, TIMER)  THEN
    CHWP_FAILED_A = On
    GOTO PUMP_FAILED
  EndIF
  CHWP_SS_A = On
  CHWP_SPEED_CMD_A = CHWP_MASTER_SPEED_CMD

RAMP_DOWN:
  IF (PUMP_A <= PUMPS_REQ) & (PUMP_A > 0) & (CHWP_DOWN_A = Off) THEN GOTO RAMP_UP
  IF (CHWP_SPEED_CMD_A <= 35) ! (CHWP_STATUS_A = Off) ! (PUMPS_REQ = 0)  THEN
    CHWP_LASTSTOP_A = Date
    GOTO PUMP_OFF
  EndIF
  CHWP_SPEED_CMD_A = maximum(CHWP_SPEED_CMD_A - 5, 35)
  GOTO RAMP_DOWN_WAIT

RAMP_DOWN_WAIT:
  IF (TS >= 5)  THEN GOTO RAMP_DOWN

PUMP_FAILED:
  IF (PUMPS_AVAIL = 0)  THEN CHWP_FAILED_A = Off
  IF (CHWP_FAILED_A = Off)  THEN GOTO PUMP_OFF
  CHWP_SS_A = Off
  CHWP_SPEED_CMD_A = 0