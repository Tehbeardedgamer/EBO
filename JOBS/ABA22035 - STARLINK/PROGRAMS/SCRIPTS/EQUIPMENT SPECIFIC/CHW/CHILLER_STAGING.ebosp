Numeric Input CH_DOWN_1,CH_DOWN_2,CH_DOWN_3,CH_DOWN_4,CH_DOWN_5,CH_DOWN_6,CH_DOWN_7,CH_DOWN_8,CH_DOWN_9,CH_DOWN_10,CH_DOWN_11,CH_DOWN_12
Numeric Input CH_FAIL_1,CH_FAIL_2,CH_FAIL_3,CH_FAIL_4,CH_FAIL_5,CH_FAIL_6,CH_FAIL_7,CH_FAIL_8,CH_FAIL_9,CH_FAIL_10,CH_FAIL_11,CH_FAIL_12
Numeric Input CH_STATUS_1,CH_STATUS_2,CH_STATUS_3,CH_STATUS_4,CH_STATUS_5,CH_STATUS_6,CH_STATUS_7,CH_STATUS_8,CH_STATUS_9,CH_STATUS_10,CH_STATUS_11,CH_STATUS_12
Numeric Input CH_RT_1,CH_RT_2,CH_RT_3,CH_RT_4,CH_RT_5,CH_RT_6,CH_RT_7,CH_RT_8,CH_RT_9,CH_RT_10,CH_RT_11,CH_RT_12,SchChlrReseq,HEATING_CALL
Numeric Public CH_SEQ_1,CH_SEQ_2,CH_SEQ_3,CH_SEQ_4,CH_SEQ_5,CH_SEQ_6,CH_SEQ_7,CH_SEQ_8,CH_SEQ_9,CH_SEQ_10,CH_SEQ_11,CH_SEQ_12
Numeric Public ChReseq,ChsAvail
Datetime Public LAST_ROTATION
Numeric RunTimes[12], SeqList[12], Score[12], DeviceAvail[12], X, Y
Numeric PrevCnt, ValueOfMax, LowSeq, HighSeq, WhosMax
Goto Calculating

Calculating:
  DeviceAvail[1] = (1 - (CH_DOWN_1 + CH_FAIL_1))
  DeviceAvail[2] = (1 - (CH_DOWN_2 + CH_FAIL_2))
  DeviceAvail[3] = (1 - (CH_DOWN_3 + CH_FAIL_3))
  DeviceAvail[4] = (1 - (CH_DOWN_4 + CH_FAIL_4))
  DeviceAvail[5] = (1 - (CH_DOWN_5 + CH_FAIL_5))
  DeviceAvail[6] = (1 - (CH_DOWN_6 + CH_FAIL_6))
  DeviceAvail[7] = (1 - (CH_DOWN_7 + CH_FAIL_7))
  DeviceAvail[8] = (1 - (CH_DOWN_8 + CH_FAIL_8))
  DeviceAvail[9] = (1 - (CH_DOWN_9 + CH_FAIL_9))
  DeviceAvail[10] = (1 - (CH_DOWN_10 + CH_FAIL_10))
  DeviceAvail[11] = (1 - (CH_DOWN_11 + CH_FAIL_11))
  DeviceAvail[12] = (1 - (CH_DOWN_12 + CH_FAIL_12))

  PrevCnt = ChsAvail
  ChsAvail =  sum(DeviceAvail)
  If (ChsAvail <> PrevCnt) then Goto AddDropReSeq
  If (sum(CH_SEQ_1 > 0, CH_SEQ_2 > 0, CH_SEQ_3 > 0, CH_SEQ_4 > 0, CH_SEQ_5 > 0, CH_SEQ_6 > 0, CH_SEQ_7 > 0, CH_SEQ_8 > 0, CH_SEQ_9 > 0, CH_SEQ_10 > 0, CH_SEQ_11 > 0, CH_SEQ_12 > 0)) <> (ChsAvail) then Goto AddDropReSeq
  If ((SchChlrReseq=On)&((Date-3600)>LAST_ROTATION)) Then
    LAST_ROTATION = Date
    Goto RunTimeReseq
  Endif

AddDropReSeq:
  If (DeviceAvail[1] = 0) & (CH_SEQ_1 > 0) then CH_SEQ_1 = 0
	If (DeviceAvail[2] = 0) & (CH_SEQ_2 > 0) then CH_SEQ_2 = 0
  If (DeviceAvail[3] = 0) & (CH_SEQ_3 > 0) then CH_SEQ_3 = 0
  If (DeviceAvail[4] = 0) & (CH_SEQ_4 > 0) then CH_SEQ_4 = 0
  If (DeviceAvail[5] = 0) & (CH_SEQ_5 > 0) then CH_SEQ_5 = 0
  If (DeviceAvail[6] = 0) & (CH_SEQ_6 > 0) then CH_SEQ_6 = 0
  If (DeviceAvail[7] = 0) & (CH_SEQ_7 > 0) then CH_SEQ_7 = 0
  If (DeviceAvail[8] = 0) & (CH_SEQ_8 > 0) then CH_SEQ_8 = 0
  If (DeviceAvail[9] = 0) & (CH_SEQ_9 > 0) then CH_SEQ_9 = 0
  If (DeviceAvail[10] = 0) & (CH_SEQ_10 > 0) then CH_SEQ_10 = 0
  If (DeviceAvail[11] = 0) & (CH_SEQ_11 > 0) then CH_SEQ_11 = 0
  If (DeviceAvail[12] = 0) & (CH_SEQ_12 > 0) then CH_SEQ_12 = 0

  Score[1] = (DeviceAvail[1] > 0) + ((CH_STATUS_1) * (DeviceAvail[1] > 0)) + (HEATING_CALL = 1)
  Score[2] = (DeviceAvail[2] > 0) + ((CH_STATUS_2) * (DeviceAvail[2] > 0)) + (HEATING_CALL = 1)
  Score[3] = (DeviceAvail[3] > 0) + ((CH_STATUS_3) * (DeviceAvail[3] > 0)) + (HEATING_CALL = 1)
  Score[4] = (DeviceAvail[4] > 0) + ((CH_STATUS_4) * (DeviceAvail[4] > 0)) + (HEATING_CALL = 1)
	Score[5] = (DeviceAvail[5] > 0) + ((CH_STATUS_5) * (DeviceAvail[5] > 0))
	Score[6] = (DeviceAvail[6] > 0) + ((CH_STATUS_6) * (DeviceAvail[6] > 0))
	Score[7] = (DeviceAvail[7] > 0) + ((CH_STATUS_7) * (DeviceAvail[7] > 0))
	Score[8] = (DeviceAvail[8] > 0) + ((CH_STATUS_8) * (DeviceAvail[8] > 0))
	Score[9] = (DeviceAvail[9] > 0) + ((CH_STATUS_9) * (DeviceAvail[9] > 0))
	Score[10] = (DeviceAvail[10] > 0) + ((CH_STATUS_10) * (DeviceAvail[10] > 0))
	Score[11] = (DeviceAvail[11] > 0) + ((CH_STATUS_11) * (DeviceAvail[11] > 0))
	Score[12] = (DeviceAvail[12] > 0) + ((CH_STATUS_12) * (DeviceAvail[12] > 0))

  For X = 1 to 12
    SeqList[X] = 0
  	Next X

  For Y = 1 to minimum(ChsAvail, 12)
    WhosMax = maxitem(Score)
    SeqList[WhosMax] = Y
    Score[WhosMax] = 0
  	Next Y

  CH_SEQ_1 = SeqList[1]
  CH_SEQ_2 = SeqList[2]
  CH_SEQ_3 = SeqList[3]
  CH_SEQ_4 = SeqList[4]
  CH_SEQ_5 = SeqList[5]
  CH_SEQ_6 = SeqList[6]
  CH_SEQ_7 = SeqList[7]
  CH_SEQ_8 = SeqList[8]
  CH_SEQ_9 = SeqList[9]
  CH_SEQ_10 = SeqList[10]
  CH_SEQ_11 = SeqList[11]
  CH_SEQ_12 = SeqList[12]

Goto Calculating



RunTimeReseq:
  RunTimes[1] = maximum(CH_RT_1, 0.01) * (DeviceAvail[1] > 0)
  RunTimes[2] = maximum(CH_RT_2, 0.01) * (DeviceAvail[2] > 0)
  RunTimes[3] = maximum(CH_RT_3, 0.01) * (DeviceAvail[3] > 0)
  RunTimes[4] = maximum(CH_RT_4, 0.01) * (DeviceAvail[4] > 0)
  RunTimes[5] = maximum(CH_RT_5, 0.01) * (DeviceAvail[5] > 0)
  RunTimes[6] = maximum(CH_RT_6, 0.01) * (DeviceAvail[6] > 0)
  RunTimes[7] = maximum(CH_RT_7, 0.01) * (DeviceAvail[7] > 0)
  RunTimes[8] = maximum(CH_RT_8, 0.01) * (DeviceAvail[8] > 0)
  RunTimes[9] = maximum(CH_RT_9, 0.01) * (DeviceAvail[9] > 0)
  RunTimes[10] = maximum(CH_RT_10, 0.01) * (DeviceAvail[10] > 0)
  RunTimes[11] = maximum(CH_RT_11, 0.01) * (DeviceAvail[11] > 0)
  RunTimes[12] = maximum(CH_RT_12, 0.01) * (DeviceAvail[12] > 0)

	For X = 1 to 12
    SeqList[X] = 0
  	Next X

  For Y = 1 to minimum(ChsAvail, 12)
    WhosMax = maxitem(RunTimes)
    SeqList[WhosMax] = ((ChsAvail + 1) - Y)
    RunTimes[WhosMax] = 0
  	Next Y


  CH_SEQ_1 = SeqList[1]
  CH_SEQ_2 = SeqList[2]
  CH_SEQ_3 = SeqList[3]
  CH_SEQ_4 = SeqList[4]
  CH_SEQ_5 = SeqList[5]
  CH_SEQ_6 = SeqList[6]
  CH_SEQ_7 = SeqList[7]
  CH_SEQ_8 = SeqList[8]
  CH_SEQ_9 = SeqList[9]
  CH_SEQ_10 = SeqList[10]
  CH_SEQ_11 = SeqList[11]
  CH_SEQ_12 = SeqList[12]

  ChReseq = Off
  Goto Calculating

E:
    If (TS>=15) Then Goto Calculating
