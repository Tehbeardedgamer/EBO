'-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_
'--- HEADER COMMENTS ---
' This script manages and sequences devices based on various criteria such as their status, failure rate,
' current runtime, and heating call. It regularly checks for changes in device availability and adjusts the
' sequencing accordingly.
'-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

'VARIABLES
    Numeric Input DEVICE_DOWN_1, DEVICE_DOWN_2, DEVICE_DOWN_3, DEVICE_DOWN_4, DEVICE_DOWN_5, DEVICE_DOWN_6, DEVICE_DOWN_7, DEVICE_DOWN_8, DEVICE_DOWN_9, DEVICE_DOWN_10, DEVICE_DOWN_11, DEVICE_DOWN_12
    Numeric Input DEVICE_FAIL_1, DEVICE_FAIL_2, DEVICE_FAIL_3, DEVICE_FAIL_4, DEVICE_FAIL_5, DEVICE_FAIL_6, DEVICE_FAIL_7, DEVICE_FAIL_8, DEVICE_FAIL_9, DEVICE_FAIL_10, DEVICE_FAIL_11, DEVICE_FAIL_12
    Numeric Input DEVICE_STATUS_1, DEVICE_STATUS_2, DEVICE_STATUS_3, DEVICE_STATUS_4, DEVICE_STATUS_5, DEVICE_STATUS_6, DEVICE_STATUS_7, DEVICE_STATUS_8, DEVICE_STATUS_9, DEVICE_STATUS_10, DEVICE_STATUS_11, DEVICE_STATUS_12
    Numeric Input DEVICE_RT_1, DEVICE_RT_2, DEVICE_RT_3, DEVICE_RT_4, DEVICE_RT_5, DEVICE_RT_6, DEVICE_RT_7, DEVICE_RT_8, DEVICE_RT_9, DEVICE_RT_10, DEVICE_RT_11, DEVICE_RT_12
    Numeric Input HEATING_CALL
    Numeric Public DEVICE_SEQ_1, DEVICE_SEQ_2, DEVICE_SEQ_3, DEVICE_SEQ_4, DEVICE_SEQ_5, DEVICE_SEQ_6, DEVICE_SEQ_7, DEVICE_SEQ_8, DEVICE_SEQ_9, DEVICE_SEQ_10, DEVICE_SEQ_11, DEVICE_SEQ_12
    Numeric Public DEVICES_AVAIL, MAX_ORDER
    Numeric DEVICE_DOWN[12], DEVICE_FAIL[12], DEVICE_AVAIL[12], DEVICE_STATUS[12], DEVICE_RT[12], DEVICE_SEQ[12], SCORE[12], RUNTIME[12],DEVICE_CHANGED, LAST_ROTATION, FORCE_RESEQUENCE, PREVIOUS_DEVICE_AVAIL[12], i




INITALIZE:
    '-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_
    '--- INITIALIZE section: Populating arrays from individual variables ---
    ' Initialize the arrays using values from individual device variables.
    ' This allows for a more streamlined handling in subsequent sections.
    '-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

    DEVICE_DOWN[1] = DEVICE_DOWN_1
    DEVICE_DOWN[2] = DEVICE_DOWN_2
    DEVICE_DOWN[3] = DEVICE_DOWN_3
    DEVICE_DOWN[4] = DEVICE_DOWN_4
    DEVICE_DOWN[5] = DEVICE_DOWN_5
    DEVICE_DOWN[6] = DEVICE_DOWN_6
    DEVICE_DOWN[7] = DEVICE_DOWN_7
    DEVICE_DOWN[8] = DEVICE_DOWN_8
    DEVICE_DOWN[9] = DEVICE_DOWN_9
    DEVICE_DOWN[10] = DEVICE_DOWN_10
    DEVICE_DOWN[11] = DEVICE_DOWN_11
    DEVICE_DOWN[12] = DEVICE_DOWN_12

    DEVICE_FAIL[1] = DEVICE_FAIL_1
    DEVICE_FAIL[2] = DEVICE_FAIL_2
    DEVICE_FAIL[3] = DEVICE_FAIL_3
    DEVICE_FAIL[4] = DEVICE_FAIL_4
    DEVICE_FAIL[5] = DEVICE_FAIL_5
    DEVICE_FAIL[6] = DEVICE_FAIL_6
    DEVICE_FAIL[7] = DEVICE_FAIL_7
    DEVICE_FAIL[8] = DEVICE_FAIL_8
    DEVICE_FAIL[9] = DEVICE_FAIL_9
    DEVICE_FAIL[10] = DEVICE_FAIL_10
    DEVICE_FAIL[11] = DEVICE_FAIL_11
    DEVICE_FAIL[12] = DEVICE_FAIL_12

    DEVICE_STATUS[1] = DEVICE_STATUS_1
    DEVICE_STATUS[2] = DEVICE_STATUS_2
    DEVICE_STATUS[3] = DEVICE_STATUS_3
    DEVICE_STATUS[4] = DEVICE_STATUS_4
    DEVICE_STATUS[5] = DEVICE_STATUS_5
    DEVICE_STATUS[6] = DEVICE_STATUS_6
    DEVICE_STATUS[7] = DEVICE_STATUS_7
    DEVICE_STATUS[8] = DEVICE_STATUS_8
    DEVICE_STATUS[9] = DEVICE_STATUS_9
    DEVICE_STATUS[10] = DEVICE_STATUS_10
    DEVICE_STATUS[11] = DEVICE_STATUS_11
    DEVICE_STATUS[12] = DEVICE_STATUS_12

    DEVICE_RT[1] = DEVICE_RT_1
    DEVICE_RT[2] = DEVICE_RT_2
    DEVICE_RT[3] = DEVICE_RT_3
    DEVICE_RT[4] = DEVICE_RT_4
    DEVICE_RT[5] = DEVICE_RT_5
    DEVICE_RT[6] = DEVICE_RT_6
    DEVICE_RT[7] = DEVICE_RT_7
    DEVICE_RT[8] = DEVICE_RT_8
    DEVICE_RT[9] = DEVICE_RT_9
    DEVICE_RT[10] = DEVICE_RT_10
    DEVICE_RT[11] = DEVICE_RT_11
    DEVICE_RT[12] = DEVICE_RT_12

    GOTO CHECK_DEVICE_AVAIL


CHECK_DEVICE_AVAIL:

    '-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_
    '--- CHECK_DEVICE_AVAIL section ---
    ' This section calculates how many devices are currently available.
    ' The availability of a device is determined by whether it's down or has failed.
    '-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

    DEVICES_AVAIL = 0
    DEVICE_CHANGED = FALSE

    for i = 1 to 12
        DEVICE_AVAIL[i] = maximum(1 - (DEVICE_DOWN[i] + DEVICE_FAIL[i]),0)
        If DEVICE_AVAIL[i] <> PREVIOUS_DEVICE_AVAIL[i] Then
            DEVICE_CHANGED = TRUE
            EndIf
        PREVIOUS_DEVICE_AVAIL[i] = DEVICE_AVAIL[i]
    Next i

    DEVICES_AVAIL = sum(DEVICE_AVAIL)

    If DEVICE_CHANGED Then
        GOTO CHECK_RESEQUENCE
    EndIf

    GOTO WAIT_LOOP

CHECK_RESEQUENCE:

    '-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_
    '--- CHECK_RESEQUENCE section ---
    ' Checks whether devices need to be resequenced.
    ' This could be either because of a change in availability or if a forced resequence has been triggered.
    '-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

    If ((FORCE_RESEQUENCE = On)&((Date - 3600) > LAST_ROTATION)) Then
        LAST_ROTATION = Date

        Goto RUNTIME_RESEQUENCE

    EndIf

    GOTO SEQUENCE_RESET

SEQUENCE_RESET:

    '-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_
    '--- SEQUENCE_RESET section ---
    ' Resets the sequencing of devices which are not available.
    '-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

    for i = 1 to 12

        If (DEVICE_AVAIL[i] = 0) & (DEVICE_SEQ[i] > 0) then DEVICE_SEQ[i] = 0

    Next i

    GOTO SEQUENCE_SCORE


SEQUENCE_SCORE:
    '-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_
    '--- SEQUENCE_SCORE section ---
    ' Determines a score for each device based on its availability, status, and (for the first four devices) the heating call.
    ' This score will be used to sequence the devices in the DEVICE_ORDER section.
    '-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

    For i = 1 to 12
        SCORE[i] = (DEVICE_AVAIL[i] > 0) + ((DEVICE_STATUS[i]) * (DEVICE_AVAIL[i] > 0))
        If i <= 4 And DEVICE_STATUS[i] = 1 And DEVICE_AVAIL[i] = 1 And HEATING_CALL > 0 Then
            SCORE[i] = SCORE[i] + 1
        EndIf
    Next i

    GOTO DEVICE_ORDER
   
DEVICE_ORDER:

    '-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_
    '--- DEVICE_ORDER section ---
    ' Determines the order/sequence of devices based on their scores.
    ' Devices with higher scores will be given preference.
    '-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

    For i = 1 to 12
        DEVICE_SEQ[i] = 0
    Next i

    For i = 1 to minimum(DEVICES_AVAIL, 12)
        MAX_ORDER = maxitem(SCORE)
        DEVICE_SEQ[MAX_ORDER] = i
        SCORE[MAX_ORDER] = 0
    Next i

    GOTO SET_SEQUENCE
 
RUNTIME_RESEQUENCE:

    '-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_
    '--- RUNTIME_RESEQUENCE section ---
    ' Determines the order/sequence of devices based on their runtime.
    ' Devices with longer runtimes are given lower sequence numbers, meaning they should run later.
    ' This helps in distributing the runtime across devices and prolonging their lifespan.
    '-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

    For i = 1 to 12
        RUNTIME[i] = maximum(DEVICE_RT[i], 0.01) * (DEVICE_AVAIL[i] > 0)
    Next i

    For i = 1 to 12
        DEVICE_SEQ[i] = 0
    Next i

    For i = 1 to minimum(DEVICES_AVAIL, 12)
        MAX_ORDER = maxitem(RUNTIME)
        DEVICE_SEQ[MAX_ORDER] = ((DEVICES_AVAIL + 1) - i)
        RUNTIME[MAX_ORDER] = 0
    Next i

    FORCE_RESEQUENCE = Off
    GOTO SET_SEQUENCE

SET_SEQUENCE:
    '-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_
    '--- SET_SEQUENCE section ---
    ' Transfers the calculated sequences for devices to public variables.
    ' This allows the sequences to be accessed by other scripts or programs.
    '-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

    DEVICE_SEQ_1 = DEVICE_SEQ[1]
    DEVICE_SEQ_2 = DEVICE_SEQ[2]
    DEVICE_SEQ_3 = DEVICE_SEQ[3]
    DEVICE_SEQ_4 = DEVICE_SEQ[4]
    DEVICE_SEQ_5 = DEVICE_SEQ[5]
    DEVICE_SEQ_6 = DEVICE_SEQ[6]
    DEVICE_SEQ_7 = DEVICE_SEQ[7]
    DEVICE_SEQ_8 = DEVICE_SEQ[8]
    DEVICE_SEQ_9 = DEVICE_SEQ[9]
    DEVICE_SEQ_10 = DEVICE_SEQ[10]
    DEVICE_SEQ_11 = DEVICE_SEQ[11]
    DEVICE_SEQ_12 = DEVICE_SEQ[12]

    GOTO WAIT_LOOP

WAIT_LOOP:

    '-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_
    '--- WAIT_LOOP section ---
    ' A simple waiting loop.
    ' The script will pause here for a set duration (60 seconds) before checking the device availability again.
    '-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

    Wait 60
    Goto CHECK_DEVICE_AVAIL



